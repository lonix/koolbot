# KoolBot TODO List

## Medium Priority
- [ ] Documentation Updates (P1)
  - [ ] Add troubleshooting guide
    - Success Criteria:
      - Common issues and solutions
      - Step-by-step debugging guide
      - Error code reference
  - [ ] Add contribution guidelines
    - Success Criteria:
      - Code style guide
      - PR process documentation
      - Testing requirements
  - [ ] Document cron schedule format
    - Success Criteria:
      - Clear examples for common schedules
      - Validation rules
      - Timezone considerations
  - [ ] Add environment variables guide
    - Success Criteria:
      - All variables documented
      - Default values listed
      - Required vs optional marked
  - [ ] Document admin commands
    - Success Criteria:
      - Permission requirements
      - Usage examples
      - Expected outcomes

- [ ] Code Quality (P2)
  - [ ] Add unit tests
    - Success Criteria:
      - 80% code coverage
      - All critical paths tested
      - Mock external dependencies
  - [ ] Add integration tests
    - Success Criteria:
      - End-to-end command testing
      - Database interaction tests
      - Discord API integration tests
  - [ ] Add performance metrics
    - Success Criteria:
      - Response time tracking
      - Memory usage monitoring
      - Database query performance
      - API call latency

- [ ] Settings Reorganization (P2)
  - [ ] Implement dot notation for settings
    - Success Criteria:
      - Convert all settings to dot notation (e.g., vc-management.enabled)
      - Update all references to settings
      - Maintain backward compatibility
  - [ ] Add settings validation
    - Success Criteria:
      - Type checking for settings
      - Value range validation
      - Required dependencies checking
  - [ ] Add settings migration system
    - Success Criteria:
      - Automatic migration from old format
      - Backup of old settings
      - Rollback capability
  - [ ] Update documentation
    - Success Criteria:
      - New settings format guide
      - Migration instructions
      - Examples of new format

## Low Priority
- [ ] Feature Enhancements (P3)
  - [ ] Add optional timezone support to /seen
  - [ ] Add price history tracking to PLEX checker
  - [ ] Add price alerts to PLEX checker
  - [ ] Add command cooldown system
  - [ ] Add user feedback system

- [ ] Fun Features (P3)
  - [ ] Add easter eggs
  - [ ] Add secret commands
  - [ ] Add hidden achievements
  - [ ] Add bot jealousy system
    - Success Criteria:
      - Bot reacts when mentioned in other channels
      - Bot shows jealousy when users talk to other bots
      - Configurable jealousy levels
      - Customizable responses
      - Cooldown system to prevent spam

- [ ] Channel Info Categories (P3)
  - [ ] Add category management
    - Success Criteria:
      - Create/edit/delete categories
      - Assign channels to categories
      - Set category display order
  - [ ] Add info commands
    - Success Criteria:
      - /info list - List all categories
      - /info category <name> - Show channels in category
      - /info channel <name> - Show channel details
  - [ ] Add channel templates
    - Success Criteria:
      - Predefined templates for common channels
      - Custom template creation
      - Template variables support
  - [ ] Add auto-categorization
    - Success Criteria:
      - Auto-detect channel purpose
      - Suggest appropriate category
      - Learning from user corrections

- [ ] Quote Database (P3)
  - [ ] Add quote management
    - Success Criteria:
      - Add/edit/delete quotes
      - Quote categories/tags
      - Quote attribution
      - Quote search
  - [ ] Add quote commands
    - Success Criteria:
      - /quote add - Add new quote
      - /quote random - Get random quote
      - /quote search - Search quotes
      - /quote top - Show most popular quotes
  - [ ] Add quote reactions
    - Success Criteria:
      - Like/dislike quotes
      - Quote sharing
      - Quote of the day
  - [ ] Add quote moderation
    - Success Criteria:
      - Quote approval system
      - Report inappropriate quotes
      - Auto-moderation rules

- [ ] Docker Control (P3)
  - [ ] Add container management
    - Success Criteria:
      - Start/stop containers
      - View container status
      - View container logs
      - Container resource usage
  - [ ] Add service management
    - Success Criteria:
      - Service status monitoring
      - Service health checks
      - Service restart policies
      - Service dependencies
  - [ ] Add Docker commands
    - Success Criteria:
      - /docker status - Show all containers
      - /docker logs - View container logs
      - /docker restart - Restart container
      - /docker update - Update container
  - [ ] Add security features
    - Success Criteria:
      - Role-based access control
      - Command whitelisting
      - Audit logging
      - Rate limiting

- [ ] Future Ideas (P4)
  - [ ] Add more EVE Online related features
    - Market Commands
      - [ ] /market price - Get current Jita market prices
      - [ ] /market history - Show price history and trends
      - [ ] /market compare - Compare prices between trade hubs
      - [ ] /market alerts - Set price alerts for items
    - Character Information
      - [ ] /character info - Get basic character info
      - [ ] /character skills - Show skill points and top skills
      - [ ] /character wallet - Show wallet balance
      - [ ] /character assets - List character's assets
    - Corporation/Alliance
      - [ ] /corp info - Get corporation information
      - [ ] /corp members - List corporation members
      - [ ] /alliance info - Get alliance information
      - [ ] /alliance corps - List corporations in alliance
    - Killboard Integration
      - [ ] /killboard recent - Show recent kills
      - [ ] /killboard stats - Get killboard statistics
      - [ ] /killboard loss - Get recent losses
      - [ ] /killboard top - Show top killers
    - Industry Tools
      - [ ] /industry cost - Calculate manufacturing costs
      - [ ] /industry profit - Show profit margins
      - [ ] /industry materials - List required materials
      - [ ] /industry time - Show production time
    - Navigation
      - [ ] /route - Get optimal route between systems
      - [ ] /distance - Calculate jump distance
      - [ ] /system info - Get system information
      - [ ] /constellation info - Get constellation info
    - Fleet Management
      - [ ] /fleet create - Create a new fleet
      - [ ] /fleet invite - Invite to fleet
      - [ ] /fleet broadcast - Send fleet message
      - [ ] /fleet waypoint - Set fleet waypoint
    - Miscellaneous
      - [ ] /time - Show current EVE time
      - [ ] /server status - Check server status
      - [ ] /news - Get latest EVE news
      - [ ] /events - Show upcoming events
    - Implementation Requirements
      - [ ] Integrate with EVE Online ESI API
      - [ ] Add proper error handling
      - [ ] Implement rate limiting
      - [ ] Add response caching
      - [ ] Create user-friendly formatting
  - [ ] Add custom command creation
  - [ ] Add bot statistics and analytics
  - [ ] Implement web dashboard
  - [ ] Add more interactive commands
  - [ ] Add user achievements system

# Koolbot Done List

## Core Features
- [x] Implement clean shutdown on disconnect
  - [x] Handle SIGTERM/SIGINT signals
  - [x] Gracefully disconnect from Discord
  - [x] Save state before shutdown
  - [x] Close database connections

## Voice Channel Features
- [x] Voice Channel Tracking
  - [x] Track user time in VC
  - [x] Track message count in VC
  - [x] Store VC statistics in database
  - [x] Add VC leaderboard command
  - [x] Add VC stats command
  - [x] Add last seen tracking
  - [x] Add weekly announcement system
    - [x] Cron-style scheduling
    - [x] Customizable timing
    - [x] Admin manual trigger
    - [x] Top users highlighting
  - [x] Fix voice tracking database model integration
    - [x] Resolve VoiceSessionModel vs VoiceChannelTracking model mismatch
    - [x] Ensure proper data persistence and retrieval
    - [x] Add debug logging for voice state updates

- [x] Lobby VC Creation
  - [x] Create dynamic voice channels from lobby
  - [x] Auto-cleanup unused channels
  - [x] Custom channel naming
  - [x] Channel permissions management
  - [x] Remove default user limit
  - [x] Add startup cleanup
  - [x] Add control buttons for channel management
  - [x] Add automatic channel reinitialization on config changes
    - [x] Configuration reload callback system
    - [x] Handle lobby channel name changes automatically
    - [x] Force reinitialization capability
    - [x] Enhanced setup-lobby command with better feedback

## Commands
- [x] /seen Command
  - [x] Track last seen time for users
  - [x] Store in database
  - [x] Add command to check last seen

- [x] PLEX Price Checker
  - [x] Add Jita price check
  - [x] Fix API 503 error with fallback endpoints
    - [x] Implement EVE ESI API fallback
    - [x] Add better error handling and user feedback
    - [x] Add timeout handling for API calls
    - [x] Provide helpful error messages when both APIs fail

- [x] /amikool Command
  - [x] Add role-based verification
  - [x] Add random response variety
  - [x] Add emoji support

- [x] /ping Command
  - [x] Add basic ping functionality
  - [x] Add error handling
  - [x] Add logging

- [x] Fix command loading and registration issues
  - [x] Resolve "No command matching config was found" error
  - [x] Add configuration reload callbacks for command manager
  - [x] Implement on-demand command refresh mechanism
  - [x] Fix TypeScript type definitions for command interactions
  - [x] Ensure proper command population in client collection

## Documentation
- [x] Add setup instructions
- [x] Document all commands
- [x] Add configuration examples
- [x] Document database schema

## Technical Improvements
- [x] Fix TypeScript type definitions
- [x] Add proper dependency management
- [x] Improve error handling
- [x] Add proper command validation
- [x] Add comprehensive logging
- [x] Add build, lint, and prettier validation
  - [x] Ensure all code passes linting checks
  - [x] Maintain consistent code formatting
  - [x] Validate TypeScript compilation
  - [x] Run comprehensive checks before deployment

## Configuration
- [x] Environment Configuration (P0)
  - [x] Add .env validation system
    - Success Criteria:
      - All required variables are checked at startup
      - Clear error messages for missing/invalid variables
      - Type checking for numeric/boolean values
      - Validation for cron expressions
  - [x] Add configuration checker
    - Success Criteria:
      - Command to verify current configuration
      - Reports missing or invalid settings
      - Suggests fixes for common issues
  - [x] Add type-safe config loading
    - Success Criteria:
      - TypeScript types for all config values
      - Runtime type checking
      - Default values for optional settings
  - [x] Add config migration system
    - Success Criteria:
      - Automatic migration of old config formats
      - Backup of old config before changes
      - Clear migration logs

- [x] Migrate Settings to Database (P0)
  - [x] Design settings schema
    - Success Criteria:
      - Support for all current .env settings
      - Type-safe schema definition
      - Version control for settings
      - Audit trail for changes
  - [x] Create settings management system
    - Success Criteria:
      - Admin commands for viewing/editing settings
      - Validation before saving changes
      - Caching for performance
      - Fallback to .env for critical settings
  - [x] Implement migration process
    - Success Criteria:
      - One-way migration from .env to database
      - No service interruption during migration
      - Rollback capability
      - Migration status tracking
  - [x] Update documentation
    - Success Criteria:
      - New settings management guide
      - Migration instructions
      - Admin command documentation
      - Troubleshooting guide

- [x] Remove guild command registration (P0)
  - [x] Migrate to global commands
    - Success Criteria:
      - All commands work globally
      - No guild-specific command registration
      - Proper permission handling
  - [x] Update command registration system
    - Success Criteria:
      - Single registration point for all commands
      - Proper error handling for registration failures
      - Command update tracking
  - [x] Clean up old guild-specific code
    - Success Criteria:
      - No references to guild command registration
      - Removed unused guild-specific utilities
      - Updated documentation

- [x] Clean up logging system (P1)
  - [x] Standardize log formats
    - Success Criteria:
      - Consistent log structure across all modules
      - JSON format for machine parsing
      - Clear log levels (ERROR, WARN, INFO, DEBUG)
  - [x] Add log rotation
    - Success Criteria:
      - Automatic log file rotation
      - Configurable rotation size/interval
      - Compressed old logs
  - [x] Add log levels configuration
    - Success Criteria:
      - Runtime log level changes
      - Module-specific log levels
      - Log level persistence
